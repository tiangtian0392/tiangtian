import pandas as pd
import datetime
import codecs

# 读取第一个表和在库表的数据
Qoo10data_file = r"D:\Users\Downloads\DeliveryManagement_detail_20240411_1454.csv"
zaiku_file_path = r"\\LS410D8E6\tool\bazhuayu\在庫.csv"

def generate_output_files(Qoo10data_file, zaiku_file_path, output_folder):

    # 读取第一个表和在库表的数据
    Qdata = pd.read_csv(Qoo10data_file, encoding='shift-jis')
    zaiku_data = pd.read_csv(zaiku_file_path, encoding='shift-jis')


    Qdata['JANコード'] = Qdata['JANコード'].astype(str)
    zaiku_data['商品ID'] = zaiku_data['商品ID'].astype(str).str.strip()
    # print(Qdata['入金日'])
    # print(zaiku_data)
    # print("商品ID 列的数据类型：", zaiku_data['商品ID'].dtype)
    # print("JANコード 列的数据类型：", Qdata['JANコード'].dtype)

    # 将日期数据转换为 datetime 格式
    Qdata['入金日'] = pd.to_datetime(Qdata['入金日'])
    # 根据入金日期升序对Qoo10data表进行排序
    Qdata.sort_values(by='入金日', ascending=True, inplace=True)

    # 初始化可出库表和出库UP表
    available_for_shipping = pd.DataFrame(columns=Qdata.columns)
    in_stock_UP = pd.DataFrame(columns=['品番', '注文番号', '発送予定日', '商品名', '数量', '決済サイト', '購入者決済金額', '供給原価の合計', '販売者商品コード', 'JANコード'])

    #获取今日日期
    today = datetime.date.today()
    now_date = today.strftime('%Y%m%d')

    dizhi_dict = {}
    zhuwenbanhao_dict = {}


    # 对于第一个表中的每个订单
    for index, row in Qdata.iterrows():
        # 在在库表中查找匹配的商品
        # print(row['JANコード'])

        matching_items = zaiku_data[(zaiku_data['商品ID'] == row['JANコード']) & (zaiku_data['在庫数'] > 0)]
        print(index,matching_items)
        # 如果有库存，处理该订单
        if not matching_items.empty:
            # 将商品添加到可出库表中
            available_for_shipping = available_for_shipping.append(row)

            # 将商品添加到在库UP表中

            in_stock_UP = in_stock_UP.append({
                '品番': zaiku_data.loc[matching_items.index[0], '品番'],
                '注文番号': row['注文番号'],
                '発送予定日': now_date,
                '商品名': row['商品名'],
                '数量': row['数量'],
                '決済サイト': row['決済サイト'],
                '購入者決済金額': row['購入者決済金額'],
                '供給原価の合計': row['供給原価の合計'],
                '販売者商品コード': row['販売者商品コード'],
                'JANコード': row['JANコード']
            }, ignore_index=True)
            # 减少库存数量
            zaiku_data.loc[matching_items.index[0], '在庫数'] -= 1

    # 保存可出库表和在库UP表
    available_for_shipping.to_csv(f"{output_folder}\\可出库{now_date}.csv", index=False, encoding='shift-jis')
    in_stock_UP.to_csv(f"{output_folder}\\出庫UP{now_date}.csv", index=False, encoding='ANSI')


# 生成输出文件
generate_output_files(Qoo10data_file, zaiku_file_path, r"D:\\")
