import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from minijiduanqi import Ui_jisuanqi

class mywindow(QWidget,Ui_jisuanqi):
    def __init__(self,):
        super(mywindow, self).__init__()
        self.setupUi(self)
        self.setWindowTitle("价格计算")


        #百分比按钮菜单
        self.menu_baifenbi = QtWidgets.QMenu

        self.lineEdit.textChanged.connect(self.calculate_value)
        self.pushButton.clicked.connect(self.calculate_value)
        self.pushButton_2.clicked.connect(self.calculate_value)

        # 双击置顶
        self.is_stay_on_top = False
        self.mouseDoubleClickEvent = self.toggle_stay_on_top

    def toggle_stay_on_top(self, event):
        if not self.is_stay_on_top:
            self.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint)
            self.is_stay_on_top = True
            self.setWindowTitle("价格计算 (On Top)")
        else:
            self.setWindowFlags(QtCore.Qt.Widget)
            self.is_stay_on_top = False
            self.setWindowTitle("价格计算")
        self.show()

    def on_menu_click(self,button, value):
        button.setText(str(value))
        # Do something with the selected menu option
        # print('打印',self,value)


    def calculate_value(self, value):
        Bt1 = self.pushButton.text()
        Bt2 = self.pushButton_2.text()
        num = self.lineEdit.text()
        print(Bt1,Bt2,num)
        try:
            value = float(value)
            # 进行一些计算
            result = value * 2
            # 更新标签中的值
            self.label.setText("值={:.2f}".format(result))
        except ValueError:
            # 如果输入的不是浮点数，则清空标签中的值
            self.label.setText("值=")
    # # 双击置顶
    # def mouseDoubleClickEvent(self, QMouseEvent):
    #     print('鼠标双击',)
    #     if self.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint):
    #         self.setWindowFlags(QtCore.Qt.Widget)
    #     else:
    #         self.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint)
    #     self.show()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    win = mywindow()

    win.show()
    sys.exit(app.exec_())
    
    
    -------------------------------
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_jisuanqi(object):
    def setupUi(self, jisuanqi):

        jisuanqi.setObjectName("jisuanqi")

        # 设置窗口无边框
        # jisuanqi.setWindowFlag(QtCore.Qt.FramelessWindowHint)
        # 设置窗口透明度为80%
        jisuanqi.setWindowOpacity(0.7)
        # jisuanqi.setWindowModality(QtCore.Qt.WindowModal)

        jisuanqi.resize(300, 40)
        # jisuanqi.setLocale(QtCore.QLocale(QtCore.QLocale.Japanese, QtCore.QLocale.Japan))
        self.splitter = QtWidgets.QSplitter(jisuanqi)
        self.splitter.setGeometry(QtCore.QRect(10, 10, 298, 20))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.lineEdit = QtWidgets.QLineEdit(self.splitter)
        self.lineEdit.setMinimumSize(QtCore.QSize(70, 20))
        self.lineEdit.setMaximumSize(QtCore.QSize(70, 20))
        self.lineEdit.setObjectName("lineEdit")


        # Create the menu
        self.pushButton = QtWidgets.QPushButton(self.splitter)
        self.pushButton.setMinimumSize(QtCore.QSize(40, 20))
        self.pushButton.setMaximumSize(QtCore.QSize(50, 20))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setMenu(QtWidgets.QMenu(self.pushButton))
        self.pushButton.menu().addAction("0.9").triggered.connect(lambda checked,value='0.9': self.on_menu_click(self.pushButton,value))
        self.pushButton.menu().addAction("0.91").triggered.connect(lambda checked,value='0.91': self.on_menu_click(self.pushButton,value))
        self.pushButton.menu().addAction("0.92").triggered.connect(lambda checked,value='0.92': self.on_menu_click(self.pushButton,value))

        self.pushButton_2 = QtWidgets.QPushButton(self.splitter)
        self.pushButton_2.setMinimumSize(QtCore.QSize(70, 20))
        self.pushButton_2.setMaximumSize(QtCore.QSize(50, 20))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setMenu(QtWidgets.QMenu(self.pushButton_2))
        self.pushButton_2.menu().addAction("到手价").triggered.connect(lambda checked,value='到手价': self.on_menu_click(self.pushButton_2,value))
        self.pushButton_2.menu().addAction("卖价").triggered.connect(lambda checked,value='卖价': self.on_menu_click(self.pushButton_2,value))
        self.pushButton_2.menu().addAction("供给原价").triggered.connect(lambda checked,value='供给原价': self.on_menu_click(self.pushButton_2,value))

        self.label = QtWidgets.QLabel(self.splitter)
        self.label.setMinimumSize(QtCore.QSize(80, 20))
        self.label.setMaximumSize(QtCore.QSize(80, 20))
        self.label.setObjectName("label")

        self.retranslateUi(jisuanqi)
        QtCore.QMetaObject.connectSlotsByName(jisuanqi)




    def retranslateUi(self, jisuanqi):
        _translate = QtCore.QCoreApplication.translate
        jisuanqi.setWindowTitle(_translate("jisuanqi", "Form"))
        self.pushButton.setText(_translate("jisuanqi", "0.92"))
        self.pushButton_2.setText(_translate("jisuanqi", "供给原价"))
        self.label.setText(_translate("jisuanqi", "值="))
